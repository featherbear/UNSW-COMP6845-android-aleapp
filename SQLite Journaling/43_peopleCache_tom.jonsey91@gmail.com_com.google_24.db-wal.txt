SQLite format 3
ctableandroid_metadataandroid_metadata
CREATE TABLE android_metadata (locale TEXT)
@tpV
Qh1

neq,
en_US
HoE

TXZux
}~$

*1]|

G]}

;!8

M3a08cb3f7b193f6efa0fc5d1e99b9d44
;
$	
!tableroom_master_tableroom_master_table
CREATE TABLE room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)a
	tableTokens_statTokens_stat
CREATE TABLE 'Tokens_stat'(id INTEGER PRIMARY KEY, value BLOB)l
tableTokens_docsizeTokens_docsize
CREATE TABLE 'Tokens_docsize'(docid INTEGER PRIMARY KEY, size BLOB)9
indexsqlite_autoindex_Tokens_segdir_1Tokens_segdir
=tableTokens_segdirTokens_segdir
CREATE TABLE 'Tokens_segdir'(level INTEGER,idx INTEGER,start_block INTEGER,leaves_end_block INTEGER,end_block INTEGER,root BLOB,PRIMARY KEY(level, idx))r
tableTokens_segmentsTokens_segments
CREATE TABLE 'Tokens_segments'(blockid INTEGER PRIMARY KEY, block BLOB)
otableTokens_contentTokens_content
CREATE TABLE 'Tokens_content'(docid INTEGER PRIMARY KEY, 'c0contact_id', 'c1value', 'c2affinity', 'c3field_type')
tableTokensTokensCREATE VIRTUAL TABLE `Tokens` USING FTS4(`contact_id` INTEGER NOT NULL, `value` TEXT, `affinity` REAL NOT NULL, `field_type` TEXT, tokenize=unicode61 `tokenchars=@.-`, notindexed=`contact_id`, notindexed=`affinity`, notindexed=`field_type`, prefix=`1`)
Cindexindex_RpcCache_type_key_timestampRpcCache
CREATE INDEX `index_RpcCache_type_key_timestamp` ON `RpcCache` (`type`, `key`, `timestamp`)/
indexsqlite_autoindex_RpcCache_1RpcCache
/tableRpcCacheRpcCache
CREATE TABLE `RpcCache` (`type` TEXT NOT NULL, `key` TEXT NOT NULL, `timestamp` INTEGER NOT NULL, `proto_bytes` BLOB, PRIMARY KEY(`type`, `key`))
/tableContextualCandidateTokens_statContextualCandidateTokens_stat
CREATE TABLE 'ContextualCandidateTokens_stat'(id INTEGER PRIMARY KEY, value BLOB)%
9tableContextualCandidateTokens_docsizeContextualCandidateTokens_docsize
CREATE TABLE 'ContextualCandidateTokens_docsize'(docid INTEGER PRIMARY KEY, size BLOB)_
indexsqlite_autoindex_ContextualCandidateTokens_segdir_1ContextualCandidateTokens_segdir
ctableContextualCandidateTokens_segdirContextualCandidateTokens_segdir
CREATE TABLE 'ContextualCandidateTokens_segdir'(level INTEGER,idx INTEGER,start_block INTEGER,leaves_end_block INTEGER,end_block INTEGER,root BLOB,PRIMARY KEY(level, idx))+
AtableContextualCandidateTokens_segmentsContextualCandidateTokens_segments
CREATE TABLE 'ContextualCandidateTokens_segments'(blockid INTEGER PRIMARY KEY, block BLOB)

\'
indexsqlite_autoindex
tableContextualCandidateTokens_contentContextualCandidateTokens_content
CREATE TABLE 'ContextualCandidateTokens_content'(docid INTEGER PRIMARY KEY, 'c0candidate_id', 'c1value', 'c2source_type')
stableContextualCandidateTokensContextualCandidateTokensCREATE VIRTUAL TABLE `ContextualCandidateTokens` USING FTS4(`candidate_id` TEXT NOT NULL, `value` TEXT NOT NULL, `source_type` TEXT NOT NULL, tokenize=unicode61 `tokenchars=@.-`, notindexed=`candidate_id`, notindexed=`source_type`, prefix=`1`)`

WtableContextualCandidateInfoContextualCandidateInfoCREATE TABLE `ContextualCandidateInfo` (`candidate_id` TEXT NOT NULL, `last_updated` INTEGER NOT NULL, `last_accessed` INTEGER NOT NULL, PRIMARY KEY(`candidate_id`))M
indexsqlite_autoindex_ContextualCandidateInfo_1ContextualCandidateInfo

]tableContextualCandidatesContextualCandidates
CREATE TABLE `ContextualCandidates` (`id` TEXT NOT NULL, `proto_bytes` BLOB NOT NULL, PRIMARY KEY(`id`))G	
indexsqlite_autoindex_ContextualCandidates_1ContextualCandidatesS
-tableContextualCandidateContextsContextualCandidateContexts
CREATE TABLE `ContextualCandidateContexts` (`candidate_id` TEXT NOT NULL, `context_id` TEXT NOT NULL, PRIMARY KEY(`candidate_id`, `context_id`))U
indexsqlite_autoindex_ContextualCandidateContexts_1ContextualCandidateContexts	
indexindex_Contacts_typeContacts
CREATE INDEX `index_Contacts_type` ON `Contacts` (`type`)P
Ytablesqlite_sequencesqlite_sequence
CREATE TABLE sqlite_sequence(name,seq);
ItableContactsContacts
CREATE TABLE `Contacts` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `affinity` REAL NOT NULL, `type` TEXT NOT NULL DEFAULT 'PERSON', `proto_bytes` BLOB)V
{tableCacheInfoCacheInfo
CREATE TABLE `CacheInfo` (`rowid` INTEGER NOT NULL, `last_updated` INTEGER NOT NULL, `num_contacts` INTEGER NOT NULL DEFAULT 0, `affinity_response_context` BLOB, PRIMARY KEY(`rowid`))W
{xlXx0k


P&

Zdzb
ad3^
C\>

-Lr


@
nQ	
CREATE TABLE 'ContextualCandidateTokens_segdir'(level INTEGER,idx INTEGER,start_block INTEGER,leaves_end_block INTEGER,end_block INTEGER,root BLOB,PRIMARY KEY(level, idx))_
CREATE TABLE 'ContextualCandidateTokens_segments'(blockid INTEGER PRIMARY KEY, block BLOB)H
tableContextualCandidateTokens_contentContextualCandidateTokens_content
CREATE TABLE 'ContextualCandidateTokens_content'(docid INTEGER PRIMARY KEY, 'c0candidate_id', 'c1value', 'c2source_type')`	
WtableContextualCandidateInfoContextualCandidateInfoCREATE TABLE `ContextualCandidateInfo` (`candidate_id` TEXT NOT NULL, `last_updated` INTEGER NOT NULL, `last_accessed` INTEGER NOT NULL, PRIMARY KEY(`candidate_id`))M

indexsqlite_autoindex_ContextualCandidateInfo_1ContextualCandidateInfo
]tableContextualCandidatesContextualCandidates	CREATE TABLE `ContextualCandidates` (`id` TEXT NOT NULL, `proto_bytes` BLOB NOT NULL, PRIMARY KEY(`id`))G
indexsqlite_autoindex_ContextualCandidates_1ContextualCandidates
S
indexsqlite_autoindex_ContextualCandidateContexts_1ContextualCandidateContexts
stableContextualCandidateTokensContextualCandidateTokensCREATE VIRTUAL TABLE `ContextualCandidateTokens` USING FTS4(`candidate_id` TEXT NOT NULL, `value` TEXT NOT NULL, `source_type` TEXT NOT NULL, tokenize=unicode61 `tokenchars=@.-`, notindexed=`candidate_id`, notindexed=`source_type`, prefix=`1`)
CREATE INDEX `index_RpcCache_type_key_timestamp` ON `RpcCache` (`type`, `key`, `timestamp`)`
CREATE INDEX `index_Contacts_type` ON `Contacts` (`type`)y
CREATE TABLE 'Tokens_content'(docid INTEGER PRIMARY KEY, 'c0contact_id', 'c1value', 'c2affinity', 'c3field_type')/
CREATE TABLE 'ContextualCandidateTokens_docsize'(docid INTEGER PRIMARY KEY, size BLOB)
